Técnicas de css

Reset padrão:

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

Hierarquia de níveis de especificação:

    header.header1 > p { /*Altera somente o parágrafo que está dentro do header*/
        background-color: blueviolet;
    }

    Se juntar o elemento com a classe, o nível de especificação fica maior

    Quando usamos o !important, o elemento que está com a anotação, tem mais especificação

Display:

Divs, p... tem display block, ou seja, joga para baixo
Span, a... tem display inline. ou seja, sempre vai para o lado
Inline-block: Sempre fica na masma linha, se tiver espaço. Se não, cai para baixo

Para trabalhar com porcentagem, usamos a seguinte técnica:

    html, body {
        height: 100%;
    }

    .el1 {
        display: inline-block;
        width: 50%;
        height: 40%;
        background-color: blue;
        border: 10px solid #f5e;
    }

Alinhamento vertical: vertical-align: middle;

Tamanho máximo e mínimo:

    .one {
        width: 100%;
        max-width: 300px;

        height: 4%;
        min-height: 80px;
        
        background: green;
    }

Espaçamento externo e interno:

Margins e paddings (os parâmetros funcionam com os dois):

Individuais:

    margin-top: 20px;
    margin-right: 50px;
    margin-bottom: 50px;

Com 4 valores:

    margin: topo direita baixo esquerda;

Com 2 valores:

    margin cima/baixo direita/esquerda;

Overflow:

    .pai {
        width: 100px;
        height: 100px;
        background: green;
        overflow-y: auto;
        overflow-X: hidden;
    }

    .filho /*dentro da div pai*/ {
        width: 100px;
        height: 200px;
        background-color: red;
    }

Background-image:

    .background {
        width: 100%;
        height: 300px;
        background-color: grey;
        background-image: url('minha-imagem.jpg');
    }

Ajustando imagem:

    background-size: 100% 100%; /*Força a imagem a se estender por completo*/
    background-size: cover; /*Faz com que a imagem se adapte ao tamanho da div, mas pode ainda sim ter cortes*/
    background-size: contain; /*Tenta adaptar a imagem com o tamanho, sem distorcer, mas o que não der, repete*/

    background-position: center; /*Imagem ajustada ao centro*/

    background-position: left; /*Imagem ajustada à esquerda*/
    background-position: left top; /*Imagem ajustada à esquerda e em cima*/
    background-position: 30px 70px;

    background-repeat: no-repeat; /*Para evitar repatição*/
     background-repeat: repeat-x; /*Só em um eixo*/

Uso do ajuste:

    background-size: contain; /*Tenta adaptar a imagem com o tamanho, sem distorcer, mas o que não der, repete*/
    background-position: center;
    background-repeat: no-repeat;
    
    A imagem fica alinhada ao centro da div, e o que não preencher, fica com uma borda
    Usado geralmente na responsividade
